from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from create_bot import admins
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.utils.keyboard import InlineKeyboardBuilder
from electro_works import electro_works
from mechanical_works import mechanical_works



def main_kb(user_telegram_id: int):
    kb_list = [
        [KeyboardButton(text="üîß –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ä–µ–º–æ–Ω—Ç"), KeyboardButton(text="üõ†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ")],
        [KeyboardButton(text="üîã –ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä"), KeyboardButton(text="‚ò†Ô∏è‚ò†Ô∏è‚ò†Ô∏è‚ò†Ô∏è")]
    ]
    if user_telegram_id in admins:
        kb_list.append([KeyboardButton(text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å")])
    if user_telegram_id in [168604695,1003927607,933028899]:
        kb_list.append([KeyboardButton(text="üéµ –ú—É–∑—ã–∫–∞")])
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
    )
    return keyboard

def m_or_e_kb():
    kb_list = [
        [KeyboardButton(text="üî© –ú–µ—Ö–∞–Ω–∏–∫–∞")],
        [KeyboardButton(text="‚ö° –≠–ª–µ–∫—Ç—Ä–æ")],
        [KeyboardButton(text="‚Ü© –û—Ç–º–µ–Ω–∞")]
    ]
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
    )
    return keyboard
def works_edit_kb():
    kb_list = [
        [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É"),KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å")],
        [KeyboardButton(text="‚úèÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–º–æ–Ω—Ç")],
        [KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]
    ]
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
    )
    return keyboard

def b_models(a):
    kb_list = [
        [InlineKeyboardButton(text="–®–∞—Ä–∫—É—Å—å –º–æ–Ω—Å—Ç—Ä 15", callback_data='–®–∞—Ä–∫—É—Å—å –º–æ–Ω—Å—Ç—Ä 15')],
        [InlineKeyboardButton(text="–®–∞—Ä–∫—É—Å—å –º–æ–Ω—Å—Ç—Ä 20", callback_data='–®–∞—Ä–∫—É—Å—å –º–æ–Ω—Å—Ç—Ä 20')],
        [InlineKeyboardButton(text="–ú–∏–Ω–≥—Ç–æ –º–æ–Ω—Å—Ç—Ä 20", callback_data='–ú–∏–Ω–≥—Ç–æ –º–æ–Ω—Å—Ç—Ä 20')],
        [InlineKeyboardButton(text="–ú–æ–Ω—Å—Ç—Ä –ø—Ä–æ", callback_data='–ú–æ–Ω—Å—Ç—Ä –ø—Ä–æ')],
        [InlineKeyboardButton(text="–ö—Ä—É—Ç–∏ 15", callback_data='–ö—Ä—É—Ç–∏ 15')]]
    kb_list2 = [[InlineKeyboardButton(text="Forward 27.5", callback_data='Forward 27.5')],
                [InlineKeyboardButton(text="Forward 29", callback_data='Forward 29')],
                [InlineKeyboardButton(text="Kruti 27.5", callback_data='Kruti 27.5')],
                [InlineKeyboardButton(text="Kruti 29", callback_data='Kruti 29')]
                ]
    if a=='–ú–µ—Ö–∞–Ω–∏–∫–∞':
        return InlineKeyboardMarkup(inline_keyboard=kb_list2)
    else:
        return InlineKeyboardMarkup(inline_keyboard=kb_list)
#dict_keys(['accumulator', 'electronics', 'braking_system', 'drive_train', 'frame_and_wheels', 'body_and_cosmetic', 'lighting', 'other'])
def works_groups(data,df):
    kb = [[KeyboardButton(text=i)] for i in df[df['type']==data['m_or_e']]['group'].unique()]
    kb.append([KeyboardButton(text='–ù–∞–∑–∞–¥')])
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
    )
    return keyboard

def add_spares(a):
    kb_list = [[KeyboardButton(text=i)] for i in a]
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
    )
    return keyboard
def spares_list_for_work():
    kb_list = [
        [KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å")],
        [KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –±/—É –∑–∞–ø—á–∞—Å—Ç—å")],
        [KeyboardButton(text="–ó–∞–ø—á–∞—Å—Ç–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å")]
    ]
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
    )
    return keyboard


def return_works_kb(data,df):
    kb = [[KeyboardButton(text=i)] for i in df.loc[((df['group']==data['last_group'])&(df['type']==data['m_or_e']))]['works'].unique()]
    kb.append([KeyboardButton(text='–ù–∞–∑–∞–¥')])
    keyboard = ReplyKeyboardMarkup(
            keyboard=kb,
            resize_keyboard=True,
            one_time_keyboard=True,
            input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
        )
    for i in kb:
        print(i)
    return keyboard
def return_spares_group(df,data):
    kb = [[KeyboardButton(text=i)] for i in df[df['type']==data['m_or_e']].group.unique()]
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
    )
    return keyboard
def return_spares(df,data):
    kb = [[KeyboardButton(text=i)] for i in df.loc[((df['group']==data['last_spare_group'])&(df['type']==data['m_or_e']))]['spares'].unique()]
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
    )
    return keyboard

def edit_work():
    kb_list = [
        [KeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—Ç—É")],
        [KeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å")],
    ]
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
    )
    return keyboard
def deleting_works(data):
    print(data)
    kb = [[KeyboardButton(text=i)] for i in data['works']]
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
    )
    return keyboard
def to_delete_work(data,df):
    kb = [[KeyboardButton(text=i)] for i in data['works']]
    kb.append([KeyboardButton(text='–û—Ç–º–µ–Ω–∞')])
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:"
    )
    for i in kb:
        print(i)
    return keyboard